#!/usr/bin/env perl

use strict;
use warnings;
use File::Basename;

my $HELP = <<HELP;

  Generate the initial settings.txt file for a specified genome.

  usage: generate-settings genome
  * genome = name (hg19, mm10, etc.) or exact dir (contains genome.fa and genes.gtf)

HELP

if (!$ARGV[0]) {
	die $HELP;
}

main();

# main subroutine
sub main {
	my $genome_arg = $ARGV[0];

	my $account_name= $ARGV[1];

	# pipeline directory (the directory that this file is in)
	my $pipeline_dir = dirname(__FILE__);

	# settings file
	my $settings_file = "settings.txt";

	# check if the settings file already exists
	if ( -e $settings_file ) {
		die "\n\n ERROR: FILE $settings_file ALREADY EXISTS (DELETE IT TO GENERATE A NEW ONE) \n\n";
	}

	# set genome setting
	my $genome_dir_setting;
	if ($genome_arg =~ m/\//) {
		# use directory if given
		$genome_dir_setting = "GENOME-DIR|${genome_arg}\n";
	}
	else if ($genome_arg eq "hg38") {
		# use genome name if provided
		$genome_dir_setting = "GENOME-DIR|/sc/arion/projects/data-ark/Public_Unrestricted/reference_genome/Genome-fasta/H_sapiens/GRCh38/current/"
		$settings_fasta = "REF-FASTA|/sc/arion/projects/data-ark/Public_Unrestricted/reference_genome/Genome-fasta/H_sapiens/GRCh38/current/Homo_sapiens.GRCh38.dna.primary_assembly.fa"
		$settings_gtf="REF-GTF|/sc/arion/projects/data-ark/Public_Unrestricted/reference_genome/Annotation/Gencode/Human/GRCh38/current/gencode.v40.primary_assembly.annotation.gtf"

	}
	else if ($genome_arg eq "mm10") {
		# use genome name if provided
		$genome_dir_setting = "GENOME-DIR|/sc/arion/projects/data-ark/Public_Unrestricted/reference_genome/Genome-fasta/M_musculus/GRCm39/current/"
		$settings_fasta = "REF-FASTA|/sc/arion/projects/data-ark/Public_Unrestricted/reference_genome/Genome-fasta/M_musculus/GRCm39/current/Mus_musculus.GRCm39.dna.primary_assembly.fa"
		$settings_gtf="REF-GTF|/sc/arion/projects/data-ark/Public_Unrestricted/reference_genome/Annotation/Gencode/Mouse/GRCm39/current/gencode.vM29.primary_assembly.annotation.gtf"
	else {
		die "\n\n ERROR: GENOME $genome_arg NOT FOUND \n\n";
	}

	# save genome setting
	open(my $fh, ">", $settings_file);
	# print $fh $genome_setting;
	print $fh $genome_dir_setting;
	print $fh $settings_fasta;
	print $fh $settings_gtf;
	close $fh;

	# get values to make sure they were set properly
	my $settings_genome = `bash ${pipeline_dir}/scripts/get-set-setting.sh $settings_file GENOME-DIR`;
	my $settings_fasta = `bash ${pipeline_dir}/scripts/get-set-setting.sh $settings_file REF-FASTA`;
	my $settings_gtf = `bash ${pipeline_dir}/scripts/get-set-setting.sh $settings_file REF-GTF`;

	# print values
	print STDERR "\n";
	print STDERR " REF DIR : $settings_genome \n";
	print STDERR " REF FASTA : $settings_fasta \n";
	print STDERR " REF-GTF : $settings_gtf \n";

}



# end
